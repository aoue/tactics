using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Order : MonoBehaviour
{
    //order system:
    //whichever player unit is the first to act in the round applies a modifier to the player team that lasts the rest of the turn.
    //pretty minor, mostly, but it's free.
    //(doesn't kick in until after the unit has acted; only orders that are called after the unit's turn ends can affect that unit's turn. E.g. Friday's order affects her.)

    //order examples:
    // -Nai: scouting. increases movement of all units by 1. (IMPLEMENTED)
    // -Yve: aggression. x1.2 multiplier to patk, matk for all units.
    // -Friday: power conservation. +1 PW after each unit finishes their turn. (IMPLEMENTED)
    // -MC: forerunner: units cost 1 less power to deploy. (lasts to next deployment opportunity, so fine.)

    [SerializeField] private string orderName;
    [SerializeField] private string orderDescr; //keep it short, 2 lines.

    public string get_orderName() { return orderName; }
    public string get_orderDescr() { return orderDescr; }

    //called when the unit pays a power cost to use an ability or deploy a unit
    public virtual int order_power_cost(int cost)
    {
        return cost;
    }
    //called for each player owned base. Influences the power generated by each one.
    public virtual int order_power_base(int basePwGen)
    {
        return basePwGen;
    }
    //called at the start of the round when the player receives their power generated. One time, non-base dependent thing.
    public virtual int order_power_flat(int currentPower)
    {
        //powerGen is the current power level.
        return currentPower;
    }

    //called when a player unit is going to move. This influences their total move points to spend.
    public virtual int order_movement(int baseMovement)
    {
        return baseMovement;
    }

    //called at the end of damage calculations in battlebrain.
    public virtual int order_damage_dealt(int dmg)
    {
        return dmg;
    }
    public virtual int order_damage_received(int dmg) 
    {
        return dmg;
    }
    //called at the end of healing calculations in battlebrain.
    public virtual int order_heal_dealt(int heal)
    {
        return heal;
    }
    public virtual int order_heal_received(int heal)
    {
        return heal;
    }

    //called when player is attacking in battleBrain to influence the cover modifier
    public virtual int order_cover_offense(int cover)
    {
        //here, you would say: ignores defensive bonuses from cover
        return cover;
    }
    //called when player is defending in battleBrain to influence the cover modifier
    public virtual int order_cover_defense(int cover)
    {
        //here, you would say: receive double defensive bonuses from cover
        return cover;
    }

    //called at the start of damage calculations in battlebrain to influence each individual stat.
    public virtual int order_physa(int physa)
    {
        return physa;
    }
    public virtual int order_physd(int physd)
    {
        return physd;
    }
    public virtual int order_maga(int maga)
    {
        return maga;
    }
    public virtual int order_magd(int magd)
    {
        return magd;
    }






}
